<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honpe.mapper.DictInfoMapper">
	<resultMap id="BaseResultMap" type="com.honpe.po.DictInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="type_id" property="typeId" jdbcType="INTEGER" />
		<result column="dict_code" property="dictCode" jdbcType="VARCHAR" />
		<result column="info" property="info" jdbcType="VARCHAR" />
		<result column="en_info" property="enInfo" jdbcType="VARCHAR" />
		<result column="jp_info" property="jpInfo" jdbcType="VARCHAR" />
		<result column="is_fixed" property="isFixed" jdbcType="BIT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_default" property="isDefault" jdbcType="BIT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, type_id, dict_code, info, en_info, jp_info, is_fixed, create_time, update_time,
		is_default
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honpe.po.DictInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from dict_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from dict_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from dict_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.honpe.po.DictInfoExample">
		delete from dict_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.honpe.po.DictInfo">
		insert into dict_info (id, type_id, dict_code,
		info, en_info, jp_info,
		is_fixed, create_time, update_time,
		is_default)
		values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER},
		#{dictCode,jdbcType=VARCHAR},
		#{info,jdbcType=VARCHAR}, #{enInfo,jdbcType=VARCHAR}, #{jpInfo,jdbcType=VARCHAR},
		#{isFixed,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{isDefault,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.honpe.po.DictInfo">
		insert into dict_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="typeId != null">
				type_id,
			</if>
			<if test="dictCode != null">
				dict_code,
			</if>
			<if test="info != null">
				info,
			</if>
			<if test="enInfo != null">
				en_info,
			</if>
			<if test="jpInfo != null">
				jp_info,
			</if>
			<if test="isFixed != null">
				is_fixed,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isDefault != null">
				is_default,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="typeId != null">
				#{typeId,jdbcType=INTEGER},
			</if>
			<if test="dictCode != null">
				#{dictCode,jdbcType=VARCHAR},
			</if>
			<if test="info != null">
				#{info,jdbcType=VARCHAR},
			</if>
			<if test="enInfo != null">
				#{enInfo,jdbcType=VARCHAR},
			</if>
			<if test="jpInfo != null">
				#{jpInfo,jdbcType=VARCHAR},
			</if>
			<if test="isFixed != null">
				#{isFixed,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDefault != null">
				#{isDefault,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.honpe.po.DictInfoExample" resultType="java.lang.Integer">
		select count(*) from dict_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update dict_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.typeId != null">
				type_id = #{record.typeId,jdbcType=INTEGER},
			</if>
			<if test="record.dictCode != null">
				dict_code = #{record.dictCode,jdbcType=VARCHAR},
			</if>
			<if test="record.info != null">
				info = #{record.info,jdbcType=VARCHAR},
			</if>
			<if test="record.enInfo != null">
				en_info = #{record.enInfo,jdbcType=VARCHAR},
			</if>
			<if test="record.jpInfo != null">
				jp_info = #{record.jpInfo,jdbcType=VARCHAR},
			</if>
			<if test="record.isFixed != null">
				is_fixed = #{record.isFixed,jdbcType=BIT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isDefault != null">
				is_default = #{record.isDefault,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update dict_info
		set id = #{record.id,jdbcType=INTEGER},
		type_id = #{record.typeId,jdbcType=INTEGER},
		dict_code =
		#{record.dictCode,jdbcType=VARCHAR},
		info = #{record.info,jdbcType=VARCHAR},
		en_info =
		#{record.enInfo,jdbcType=VARCHAR},
		jp_info = #{record.jpInfo,jdbcType=VARCHAR},
		is_fixed =
		#{record.isFixed,jdbcType=BIT},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP},
		is_default = #{record.isDefault,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.honpe.po.DictInfo">
		update dict_info
		<set>
			<if test="typeId != null">
				type_id = #{typeId,jdbcType=INTEGER},
			</if>
			<if test="dictCode != null">
				dict_code = #{dictCode,jdbcType=VARCHAR},
			</if>
			<if test="info != null">
				info = #{info,jdbcType=VARCHAR},
			</if>
			<if test="enInfo != null">
				en_info = #{enInfo,jdbcType=VARCHAR},
			</if>
			<if test="jpInfo != null">
				jp_info = #{jpInfo,jdbcType=VARCHAR},
			</if>
			<if test="isFixed != null">
				is_fixed = #{isFixed,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDefault != null">
				is_default = #{isDefault,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.honpe.po.DictInfo">
		update dict_info
		set type_id = #{typeId,jdbcType=INTEGER},
		dict_code = #{dictCode,jdbcType=VARCHAR},
		info = #{info,jdbcType=VARCHAR},
		en_info = #{enInfo,jdbcType=VARCHAR},
		jp_info
		= #{jpInfo,jdbcType=VARCHAR},
		is_fixed = #{isFixed,jdbcType=BIT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		is_default = #{isDefault,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByTypeCode" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT dict_info.* FROM dict_info INNER
		JOIN dict_type ON dict_type.id=dict_info.type_id AND
		dict_type.is_delete=false
		AND dict_type.type_code= #{typeCode}
		ORDER BY dict_info.is_default DESC,dict_info.create_time ASC
	</select>
	<select id="selectByTypeCodeAndDictCode" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT dict_info.* FROM
		dict_info INNER JOIN dict_type ON dict_info.type_id=dict_type.id AND is_delete=0 AND dict_code=#{dictCode} AND
		type_code=#{typeCode};
	</select>
</mapper>