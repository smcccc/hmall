<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honpe.mapper.OrderBargainMapper" >
  <resultMap id="BaseResultMap" type="com.honpe.po.OrderBargain" >
    <id column="bargain_id" property="bargainId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="buyer_id" property="buyerId" jdbcType="VARCHAR" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="differ_payment" property="differPayment" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="salesman" property="salesman" jdbcType="VARCHAR" />
    <result column="salesman_id" property="salesmanId" jdbcType="BIGINT" />
    <result column="superior_opinion" property="superiorOpinion" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bargain_id, order_id, buyer_id, payment, differ_payment, reason, salesman, salesman_id, 
    superior_opinion, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honpe.po.OrderBargainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_bargain
    where bargain_id = #{bargainId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_bargain
    where bargain_id = #{bargainId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.honpe.po.OrderBargainExample" >
    delete from order_bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.honpe.po.OrderBargain" >
    insert into order_bargain (bargain_id, order_id, buyer_id, 
      payment, differ_payment, reason, 
      salesman, salesman_id, superior_opinion, 
      status)
    values (#{bargainId,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{buyerId,jdbcType=VARCHAR}, 
      #{payment,jdbcType=DECIMAL}, #{differPayment,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, 
      #{salesman,jdbcType=VARCHAR}, #{salesmanId,jdbcType=BIGINT}, #{superiorOpinion,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.honpe.po.OrderBargain" >
    insert into order_bargain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bargainId != null" >
        bargain_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="differPayment != null" >
        differ_payment,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="salesman != null" >
        salesman,
      </if>
      <if test="salesmanId != null" >
        salesman_id,
      </if>
      <if test="superiorOpinion != null" >
        superior_opinion,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bargainId != null" >
        #{bargainId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="differPayment != null" >
        #{differPayment,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="salesman != null" >
        #{salesman,jdbcType=VARCHAR},
      </if>
      <if test="salesmanId != null" >
        #{salesmanId,jdbcType=BIGINT},
      </if>
      <if test="superiorOpinion != null" >
        #{superiorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honpe.po.OrderBargainExample" resultType="java.lang.Integer" >
    select count(*) from order_bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_bargain
    <set >
      <if test="record.bargainId != null" >
        bargain_id = #{record.bargainId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.differPayment != null" >
        differ_payment = #{record.differPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.salesman != null" >
        salesman = #{record.salesman,jdbcType=VARCHAR},
      </if>
      <if test="record.salesmanId != null" >
        salesman_id = #{record.salesmanId,jdbcType=BIGINT},
      </if>
      <if test="record.superiorOpinion != null" >
        superior_opinion = #{record.superiorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_bargain
    set bargain_id = #{record.bargainId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=BIGINT},
      buyer_id = #{record.buyerId,jdbcType=VARCHAR},
      payment = #{record.payment,jdbcType=DECIMAL},
      differ_payment = #{record.differPayment,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      salesman = #{record.salesman,jdbcType=VARCHAR},
      salesman_id = #{record.salesmanId,jdbcType=BIGINT},
      superior_opinion = #{record.superiorOpinion,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.honpe.po.OrderBargain" >
    update order_bargain
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="differPayment != null" >
        differ_payment = #{differPayment,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="salesman != null" >
        salesman = #{salesman,jdbcType=VARCHAR},
      </if>
      <if test="salesmanId != null" >
        salesman_id = #{salesmanId,jdbcType=BIGINT},
      </if>
      <if test="superiorOpinion != null" >
        superior_opinion = #{superiorOpinion,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where bargain_id = #{bargainId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honpe.po.OrderBargain" >
    update order_bargain
    set order_id = #{orderId,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=DECIMAL},
      differ_payment = #{differPayment,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      salesman = #{salesman,jdbcType=VARCHAR},
      salesman_id = #{salesmanId,jdbcType=BIGINT},
      superior_opinion = #{superiorOpinion,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT}
    where bargain_id = #{bargainId,jdbcType=VARCHAR}
  </update>
</mapper>