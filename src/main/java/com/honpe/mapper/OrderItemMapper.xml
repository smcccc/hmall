<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honpe.mapper.OrderItemMapper">
	<resultMap id="BaseResultMap" type="com.honpe.po.OrderItem">
		<id column="order_item_id" property="orderItemId" jdbcType="VARCHAR" />
		<result column="item_id" property="itemId" jdbcType="VARCHAR" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="inquiry_id" property="inquiryId" jdbcType="VARCHAR" />
		<result column="number" property="number" jdbcType="INTEGER" />
		<result column="store_number" property="storeNumber" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
		<result column="attach" property="attach" jdbcType="VARCHAR" />
		<result column="is_apply_returns" property="isApplyReturns" jdbcType="BIT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		order_item_id, item_id, order_id, inquiry_id, number, store_number, code, title,
		price, total_fee, attach,
		is_apply_returns
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honpe.po.OrderItemExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from order_item
		where order_item_id = #{orderItemId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from order_item
		where order_item_id =
		#{orderItemId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.honpe.po.OrderItemExample">
		delete from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.honpe.po.OrderItem">
		insert into order_item (order_item_id, item_id, order_id,
		inquiry_id, number,
		store_number,
		code, title, price,
		total_fee, attach, is_apply_returns
		)
		values (#{orderItemId,jdbcType=VARCHAR},
		#{itemId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR},
		#{inquiryId,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER},
		#{storeNumber,jdbcType=INTEGER},
		#{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
		#{totalFee,jdbcType=DECIMAL}, #{attach,jdbcType=VARCHAR}, #{isApplyReturns,jdbcType=BIT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.honpe.po.OrderItem">
		<selectKey keyProperty="orderItemId" resultType="java.lang.String" order="BEFORE">
			SELECT UUID()
		</selectKey>
		insert into order_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderItemId != null">
				order_item_id,
			</if>
			<if test="itemId != null">
				item_id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="inquiryId != null">
				inquiry_id,
			</if>
			<if test="number != null">
				number,
			</if>
			<if test="storeNumber != null">
				store_number,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="totalFee != null">
				total_fee,
			</if>
			<if test="attach != null">
				attach,
			</if>
			<if test="isApplyReturns != null">
				is_apply_returns,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderItemId != null">
				#{orderItemId,jdbcType=VARCHAR},
			</if>
			<if test="itemId != null">
				#{itemId,jdbcType=VARCHAR},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=VARCHAR},
			</if>
			<if test="inquiryId != null">
				#{inquiryId,jdbcType=VARCHAR},
			</if>
			<if test="number != null">
				#{number,jdbcType=INTEGER},
			</if>
			<if test="storeNumber != null">
				#{storeNumber,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="totalFee != null">
				#{totalFee,jdbcType=DECIMAL},
			</if>
			<if test="attach != null">
				#{attach,jdbcType=VARCHAR},
			</if>
			<if test="isApplyReturns != null">
				#{isApplyReturns,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.honpe.po.OrderItemExample" resultType="java.lang.Integer">
		select count(*) from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update order_item
		<set>
			<if test="record.orderItemId != null">
				order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
			</if>
			<if test="record.itemId != null">
				item_id = #{record.itemId,jdbcType=VARCHAR},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=VARCHAR},
			</if>
			<if test="record.inquiryId != null">
				inquiry_id = #{record.inquiryId,jdbcType=VARCHAR},
			</if>
			<if test="record.number != null">
				number = #{record.number,jdbcType=INTEGER},
			</if>
			<if test="record.storeNumber != null">
				store_number = #{record.storeNumber,jdbcType=INTEGER},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DECIMAL},
			</if>
			<if test="record.totalFee != null">
				total_fee = #{record.totalFee,jdbcType=DECIMAL},
			</if>
			<if test="record.attach != null">
				attach = #{record.attach,jdbcType=VARCHAR},
			</if>
			<if test="record.isApplyReturns != null">
				is_apply_returns = #{record.isApplyReturns,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update order_item
		set order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
		item_id =
		#{record.itemId,jdbcType=VARCHAR},
		order_id = #{record.orderId,jdbcType=VARCHAR},
		inquiry_id =
		#{record.inquiryId,jdbcType=VARCHAR},
		number = #{record.number,jdbcType=INTEGER},
		store_number =
		#{record.storeNumber,jdbcType=INTEGER},
		code = #{record.code,jdbcType=VARCHAR},
		title =
		#{record.title,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DECIMAL},
		total_fee =
		#{record.totalFee,jdbcType=DECIMAL},
		attach = #{record.attach,jdbcType=VARCHAR},
		is_apply_returns =
		#{record.isApplyReturns,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.honpe.po.OrderItem">
		update order_item
		<set>
			<if test="itemId != null">
				item_id = #{itemId,jdbcType=VARCHAR},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=VARCHAR},
			</if>
			<if test="inquiryId != null">
				inquiry_id = #{inquiryId,jdbcType=VARCHAR},
			</if>
			<if test="number != null">
				number = #{number,jdbcType=INTEGER},
			</if>
			<if test="storeNumber != null">
				store_number = #{storeNumber,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="totalFee != null">
				total_fee = #{totalFee,jdbcType=DECIMAL},
			</if>
			<if test="attach != null">
				attach = #{attach,jdbcType=VARCHAR},
			</if>
			<if test="isApplyReturns != null">
				is_apply_returns = #{isApplyReturns,jdbcType=BIT},
			</if>
		</set>
		where order_item_id = #{orderItemId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.honpe.po.OrderItem">
		update order_item
		set item_id = #{itemId,jdbcType=VARCHAR},
		order_id = #{orderId,jdbcType=VARCHAR},
		inquiry_id = #{inquiryId,jdbcType=VARCHAR},
		number = #{number,jdbcType=INTEGER},
		store_number = #{storeNumber,jdbcType=INTEGER},
		code = #{code,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		price = #{price,jdbcType=DECIMAL},
		total_fee = #{totalFee,jdbcType=DECIMAL},
		attach = #{attach,jdbcType=VARCHAR},
		is_apply_returns = #{isApplyReturns,jdbcType=BIT}
		where order_item_id = #{orderItemId,jdbcType=VARCHAR}
	</update>
</mapper>