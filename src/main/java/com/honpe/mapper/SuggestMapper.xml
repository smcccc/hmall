<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honpe.mapper.SuggestMapper">
	<resultMap id="BaseResultMap" type="com.honpe.po.Suggest">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="customer" property="customer" jdbcType="VARCHAR" />
		<result column="acc_id" property="accId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.honpe.po.Suggest" extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, customer, acc_id, create_time
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.honpe.po.SuggestExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from suggest
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honpe.po.SuggestExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from suggest
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from suggest
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from suggest
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.honpe.po.SuggestExample">
		delete from suggest
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.honpe.po.Suggest">
		insert into suggest (id, customer, acc_id,
		create_time, content)
		values
		(#{id,jdbcType=BIGINT}, #{customer,jdbcType=VARCHAR}, #{accId,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.honpe.po.Suggest">
		insert into suggest
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="customer != null">
				customer,
			</if>
			<if test="accId != null">
				acc_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="customer != null">
				#{customer,jdbcType=VARCHAR},
			</if>
			<if test="accId != null">
				#{accId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.honpe.po.SuggestExample" resultType="java.lang.Integer">
		select count(*) from suggest
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update suggest
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.customer != null">
				customer = #{record.customer,jdbcType=VARCHAR},
			</if>
			<if test="record.accId != null">
				acc_id = #{record.accId,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update suggest
		set id = #{record.id,jdbcType=BIGINT},
		customer = #{record.customer,jdbcType=VARCHAR},
		acc_id =
		#{record.accId,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		content =
		#{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update suggest
		set id = #{record.id,jdbcType=BIGINT},
		customer = #{record.customer,jdbcType=VARCHAR},
		acc_id =
		#{record.accId,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.honpe.po.Suggest">
		update suggest
		<set>
			<if test="customer != null">
				customer = #{customer,jdbcType=VARCHAR},
			</if>
			<if test="accId != null">
				acc_id = #{accId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.honpe.po.Suggest">
		update suggest
		set customer =
		#{customer,jdbcType=VARCHAR},
		acc_id = #{accId,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.honpe.po.Suggest">
		update suggest
		set customer = #{customer,jdbcType=VARCHAR},
		acc_id =
		#{accId,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<resultMap type="com.honpe.pojo.ext.SuggestExt" id="SuggestExtResultMap" extends="BaseResultMap">
		<result column="company_name" property="company" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectSuggestExt" resultMap="SuggestExtResultMap">
		SELECT suggest.*,ac_table.company_name FROM suggest,(SELECT
		company.company_name,account.id FROM
		company,account WHERE
		account.com_id=company.id AND account.is_active=1
		) ac_table
		WHERE ac_table.id=suggest.acc_id
	</select>
</mapper>